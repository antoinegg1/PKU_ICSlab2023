
# Execution begins at address 0 
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
	call main		# Execute main program
	halt			# Terminate program 
# Sample linked list
    .align 8
ele1:
.quad 0x00a
.quad ele2
ele2:
.quad 0x0b0
.quad ele3
ele3:
.quad 0xc00
.quad 0

main:   irmovq ele1,%rdi
    xorq %rax,%rax
    irmovq $8,%r8
    call rsum_list
    ret
rsum_list:     pushq %rbx
    mrmovq (%rdi),%rbx
    addq %rbx,%rax
    addq %r8,%rdi
    mrmovq (%rdi),%rsi
    addq %r8,%rdi
    andq %rsi,%rsi
    je return
    call rsum_list
return:
    popq %rbx
    ret
# change to memory?
# Stack starts here and grows to lower addresses
	.pos 0x200
stack:


